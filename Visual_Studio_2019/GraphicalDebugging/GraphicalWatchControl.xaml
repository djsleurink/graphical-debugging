<UserControl x:Class="GraphicalDebugging.GraphicalWatchControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             Background="{DynamicResource VsBrush.Window}"
             Foreground="{DynamicResource VsBrush.WindowText}"
             mc:Ignorable="d"
             d:DesignHeight="300" d:DesignWidth="300"
             Name="GraphicalWatchWindow">
    <Grid>
        <DataGrid x:Name="dataGrid"
                  AutoGenerateColumns="False"
                  SelectionMode="Extended"
                  SelectionUnit="FullRow"
                  CanUserAddRows="False"
                  CanUserDeleteRows="False"
                  CanUserReorderColumns="False"
                  CanUserResizeColumns="True"
                  CanUserResizeRows="False"
                  CanUserSortColumns="False"
                  IsReadOnly="False"
                  Background="{DynamicResource VsBrush.ToolWindowBackground}"
                  Foreground="{DynamicResource VsBrush.ToolWindowText}"
                  RowHeight="101"
                  BorderThickness="0"
                  PreviewKeyDown="dataGrid_PreviewKeyDown"
                  BeginningEdit="dataGrid_BeginningEdit"
                  CellEditEnding="dataGrid_CellEditEnding"
                  PreviewMouseLeftButtonDown="dataGrid_PreviewMouseLeftButtonDown">
            <DataGrid.ColumnHeaderStyle>
                <Style TargetType="{x:Type DataGridColumnHeader}">
                    <Setter Property="Background" Value="{DynamicResource VsBrush.GridHeadingBackground}" />
                    <Setter Property="Foreground" Value="{DynamicResource VsBrush.GridHeadingText}" />
                    <Setter Property="BorderBrush" Value="{DynamicResource VsBrush.ToolWindowBorder}" />
                    <Setter Property="BorderThickness" Value="0, 1, 1, 1"/>
                    <Setter Property="Padding" Value="5, 2, 5, 2" />
                </Style>
            </DataGrid.ColumnHeaderStyle>
            <DataGrid.RowHeaderStyle>
                <Style TargetType="{x:Type DataGridRowHeader}">
                    <Setter Property="Width" Value="0" />
                </Style>
            </DataGrid.RowHeaderStyle>
            <DataGrid.RowStyle>
                <Style TargetType="{x:Type DataGridRow}">
                    <Setter Property="Background" Value="{DynamicResource VsBrush.ToolWindowBackground}" />
                    <Setter Property="Foreground" Value="{DynamicResource VsBrush.ToolWindowText}" />
                </Style>
            </DataGrid.RowStyle>
            <DataGrid.CellStyle>
                <Style TargetType="{x:Type DataGridCell}">
                    <Setter Property="BorderThickness" Value="0" />
                    <!--Override Highlighting so that its easy to see what is selected even when the control is not focused-->
                    <Style.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" Value="{x:Static SystemColors.HighlightBrush}" />
                            <Setter Property="Foreground" Value="{x:Static SystemColors.HighlightTextBrush}" />
                            <Setter Property="BorderBrush" Value="{x:Static SystemColors.HighlightBrush}" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="False">
                            <Setter Property="Background" Value="{DynamicResource VsBrush.ToolWindowBackground}" />
                            <Setter Property="Foreground" Value="{DynamicResource VsBrush.ToolWindowText}" />
                            <Setter Property="BorderBrush" Value="{DynamicResource VsBrush.ToolWindowBorder}" />
                        </Trigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsSelected}" Value="True" />
                                <Condition Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=DataGrid}, Path=IsKeyboardFocusWithin}" Value="False" />
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.Setters>
                                <Setter Property="Background" Value="{DynamicResource VsBrush.ToolWindowBackground}" />
                                <Setter Property="Foreground" Value="{DynamicResource VsBrush.ToolWindowText}" />
                                <Setter Property="BorderBrush" Value="{DynamicResource VsBrush.ToolWindowBorder}" />
                            </MultiDataTrigger.Setters>
                        </MultiDataTrigger>
                    </Style.Triggers>
                </Style>
            </DataGrid.CellStyle>
            <DataGrid.Columns>
                <DataGridTextColumn Header="Name" Binding="{Binding Name}" Width="101" />
                <DataGridTemplateColumn Header="Image" Width="101">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Image Name="GridImage" Source="{Binding BmpImg}">
                                <Image.ContextMenu>
                                    <ContextMenu>
                                        <MenuItem Header="Copy" Click="imageItem_Copy"/>
                                        <Separator />
                                        <MenuItem Header="Reset View" Click="imageItem_Reset"/>
                                    </ContextMenu>
                                </Image.ContextMenu>
                            </Image>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn Header="Type" Width="*" IsReadOnly="True">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding Type}" TextWrapping="Wrap">
                                <TextBlock.ToolTip>
                                    <TextBlock Text="{Binding TypeOrError}" TextWrapping="Wrap">
                                        <TextBlock.Style>
                                            <Style TargetType="{x:Type TextBlock}">
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding IsError}" Value="true">
                                                        <Setter Property="Foreground" Value="{x:Static Brushes.Red}" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </TextBlock.Style>
                                    </TextBlock>
                                </TextBlock.ToolTip>
                                <TextBlock.Style>
                                    <Style TargetType="{x:Type TextBlock}">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsError}" Value="true">
                                                <Setter Property="Foreground" Value="{x:Static Brushes.Red}" />
                                            </DataTrigger>
                                            <Trigger Property="Text" Value="{x:Static sys:String.Empty}">
                                                <Setter Property="ToolTip.Visibility" Value="Collapsed" />
                                            </Trigger>
                                            <Trigger Property="Text" Value="{x:Null}">
                                                <Setter Property="ToolTip.Visibility" Value="Collapsed" />
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBlock.Style>
                            </TextBlock>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
            </DataGrid.Columns>
        </DataGrid>
    </Grid>
</UserControl>
